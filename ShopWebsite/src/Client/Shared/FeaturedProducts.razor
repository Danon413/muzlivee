@inject IProductService _productService
@inject ICartService CartService
@implements IDisposable

<div style="background-color: #fff; color: #000; padding: 20px;">
    <center><h2 style="color: #000;">Top Products of Today</h2></center>
    <p style="text-align: center; color: #000;">
        Discover the finest selection of music products available today. From the latest instruments to must-have accessories, our top picks will inspire your musical journey. Explore our featured products and find the perfect addition to your collection.
    </p>
    @if (_productService.Products == null || _productService.Products.Count == 0)
    {
        <span>@_productService.Message</span>
    }
    else
    {
        <div class="container">
            @foreach (var product in _productService.Products)
            {
                @if (product.Featured)
                {
                    <div class="featured-product">
                        <div>
                            <a class="product" href="product/@product.Id">
                                <img src="@product.ImageUrl" alt="@product.Title" />
                            </a>
                        </div>
                        <h4><a class="product" href="product/@product.Id" style="color: #000;">@product.Title</a></h4>
                        @if (product.Variants != null && product.Variants.Count > 0)
                        {
                            <h5 class="price">
                                €@product.Variants[0].Price
                            </h5>
                            <button @onclick="@(async () => await AddToCart(product))" class="btn btn-primary">
                                Добавить в корзину
                            </button>
                        }
                    </div>
                }
            }
        </div>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        _productService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        _productService.ProductsChanged -= StateHasChanged;
    }

    async Task AddToCart(Product product)
    {
        if (product.Variants != null && product.Variants.Count > 0)
        {
            await CartService.AddToCart(new CartItem
            {
                ProductId = product.Id,
                ProductTypeId = product.Variants[0].ProductTypeId,
                Quantity = 1
            });
        }
    }
}
